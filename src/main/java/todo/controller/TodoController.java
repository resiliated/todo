package todo.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.*;
import todo.entity.Todo;
import todo.repository.TodoRepository;

import java.util.Date;

@RestController
@RequestMapping("todo")
public class TodoController {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private TodoRepository todoRepository;

    @DeleteMapping(path="/{id}")
    public @ResponseBody void removeTodo(@PathVariable Integer id){
        todoRepository.deleteById(id);
    }

    @PutMapping(path="/{id}")
    public @ResponseBody Todo modifyTodo(@PathVariable Integer id, @RequestBody Todo newtodo){
        Todo todoToUpdate = todoRepository.findById(id).orElseThrow();
        todoToUpdate.setCreation(newtodo.getCreation());
        todoToUpdate.setContent(newtodo.getContent());
        todoToUpdate.setClose(newtodo.getClose());

        return todoRepository.save(todoToUpdate);
    }

    @PostMapping // Map ONLY POST Requests
    public @ResponseBody Todo addNewTodo (@RequestParam String content
            ) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request
        //TODO make creation by object, use polymorphic method ?
        Todo existing = todoRepository.findByContent(content);

        if(existing == null){
            Todo n = new Todo();
            n.setContent(content);
            n.setCreation(new Date());
            todoRepository.save(n);
            return n;
        }

        return existing;
    }

    @GetMapping(path="/{id}")
    public @ResponseBody Todo getTodo(@PathVariable Integer id){
        return todoRepository.findById(id).orElseThrow(); //TODO make dedicated exception
    }

    @GetMapping
    public @ResponseBody Iterable<Todo> getAllTodos() {
        // This returns a JSON or XML with the users
        return todoRepository.findAll();
    }
}